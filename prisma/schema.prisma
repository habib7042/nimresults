// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class {
  id          String   @id @default(cuid())
  name        String
  section     String?
  academicYear String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  students    Student[]
  subjects    Subject[]
  results     Result[]
}

model Student {
  id          String   @id @default(cuid())
  name        String
  rollNumber  String
  classId     String
  academicYear String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  class       Class    @relation(fields: [classId], references: [id])
  results     Result[]
}

model Subject {
  id        String   @id @default(cuid())
  name      String
  code      String?
  classId   String
  maxMarks  Int      @default(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  class     Class    @relation(fields: [classId], references: [id])
  results   Result[]
}

model Result {
  id         String   @id @default(cuid())
  studentId  String
  subjectId  String
  classId    String
  semester   Int
  year       String
  marks      Int
  grade      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  student    Student  @relation(fields: [studentId], references: [id])
  subject    Subject  @relation(fields: [subjectId], references: [id])
  class      Class    @relation(fields: [classId], references: [id])
}